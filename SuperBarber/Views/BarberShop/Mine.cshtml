@model MineBarberShopViewModel

@{
    ViewData["Title"] = "My barbershops";
    ViewBag.CanEdit = true;
}

<div asp-validation-summary="ModelOnly" class="text-danger text-center list-error"></div>

@if (!Model.BarberShops.Any())
{
    <h2 class="text-center">You do not own or work at any barbershops yet!</h2>
}
else
{
    <partial name="_BarberShopsPartial" model="@Model.BarberShops" />

    <div class="row mb-5">

        @{
            var previousPage = Model.CurrentPage - 1;
            if (previousPage < 1)
            {
                previousPage = 1;
            }

            var maxPage = Math.Ceiling((double)Model.TotalBarberShops / AllBarberShopQueryModel.BarberShopsPerPage);
        }

        <div class="col-md-6">
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="BarberShop"
           asp-action="Mine"
           asp-route-currentPage="previousPage">&lt&lt</a>
        </div>

        @{
            var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.BarberShops.Any();
        }

        <div class="col-md-6">
            <a class="btn btn-primary float-end btn-nextpage-margin @(shouldButtonBeDisabled ? "disabled" : string.Empty)" style="margin-top: 10px"
           asp-controller="BarberShop"
           asp-action="Mine"
           asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
        </div>
    </div>
}
