@model OrderViewModel

<div class="row mb-5">

    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        var maxPage = Math.Ceiling((double)Model.TotalOrders / OrderViewModel.OrdersPerPage);
    }

    @if (ViewBag.IsBarber == true)
    {
        <div class="col-md-6">
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Barber"
           asp-action="OrdersInfo"
           asp-route-currentPage="previousPage">&lt&lt</a>
        </div>
    }
    else
    {
        <div class="col-md-6">
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Order"
           asp-action="Mine"
           asp-route-currentPage="previousPage">&lt&lt</a>
        </div>
    }


    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Orders.Any();
    }

    @if (ViewBag.IsBarber == true)
    {
        <div class="col-md-6">
            <a class="btn btn-primary float-end @(shouldButtonBeDisabled ? "disabled" : string.Empty)" style="margin-top: 10px"
           asp-controller="Barber"
           asp-action="OrdersInfo"
           asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
        </div>
    }
    else
    {
        <div class="col-md-6">
            <a class="btn btn-primary float-end @(shouldButtonBeDisabled ? "disabled" : string.Empty)" style="margin-top: 10px"
           asp-controller="Order"
           asp-action="Mine"
           asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
        </div>
    }

</div>
